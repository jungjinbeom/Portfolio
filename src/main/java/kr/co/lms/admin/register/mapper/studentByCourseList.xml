<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.lms.admin.DAO.StudentByCourseDAOImp">
	<select id="selectStudentByCourse" resultType="kr.co.lms.admin.VO.StudentByCourseVO">
		select * from
		(select * from
		(select c.course_no, to_char(course_start_date, 'YYYY-MM-DD') course_start_date, course_name, course_overview, course_stage, cc.course_student_count from course c full join 
		(select p.course_no, count(p.payment_no) course_student_count from payment p full join student_course_state s on p.payment_no = s.payment_no where s.state=0 group by p.course_no) cc
		on c.course_no=cc.course_no 
		<where>
			<if test="searchWord!=null and searchWord!=''">
				and course_name like '%' || #{searchWord} || '%'
			</if>
			<if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''">
			    and course_start_date between to_date(#{startDate},'yyyy-mm-dd') And to_date(#{endDate},'yyyy-mm-dd')
			</if>
		</where>
		order by c.course_no desc)
		where rownum<![CDATA[<=]]> #{pageNum} * #{onePageRecord} order by course_no asc)
		where rownum<![CDATA[<=]]><if test="pageNum == totalPage"> #{lastPageRecords}</if>
		<if test="pageNum != totalPage">#{onePageRecord}</if> order by course_no desc
	</select>
	<select id="getSelectStudentByCourse" resultType="java.lang.Integer" parameterType="kr.co.lms.admin.VO.AdminStudentPagingVO">
		select count(course_no) from course
		<where>
			<if test="searchWord!=null and searchWord!=''">
				and course_name like '%' || #{searchWord} || '%'
			</if>
			<if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''">
			    and course_start_date between to_date(#{startDate},'yyyy-mm-dd') And to_date(#{endDate},'yyyy-mm-dd')
			</if>
		</where>
	</select>
	<select id="selectCourseInfo" resultType="kr.co.lms.admin.VO.StudentByCourseVO">
		select course_no, to_char(course_start_date, 'YYYY-MM-DD') course_start_date, course_name, course_day, course_time from course where course_no=#{param1}
	</select>
	<select id="selectCourseByStudent" resultType="kr.co.lms.admin.VO.StudentByCourseVO">
		select p.course_no, s.student_no, s.student_name_ko, s.student_img, s.student_name_eng, 
		s.student_gender, s.student_tel_parent, s.student_tel_phone from student s join payment p on s.student_no= p.student_no and p.course_no=#{param1}
		join student_course_state sc on p.student_no = sc.student_no and p.payment_no = sc.payment_no where sc.state=0
	</select>
	<delete id="attendanceRecordeDel" parameterType="kr.co.lms.admin.VO.StudentByCourseVO">
		delete from attendance where student_no=#{student_no} and course_no=#{course_no}
	</delete>
	<update id="studentClassUpdate" parameterType="kr.co.lms.admin.VO.StudentByCourseVO">
		<![CDATA[
		update payment set course_no = (select course_no from course where course_day=#{course_day} and course_time=#{course_time} and course_stage=#{course_stage})
		where student_no=#{student_no} 
		and payment_no=(select payment_no from payment where student_no=#{student_no} and course_no=#{course_no})
		]]>
	</update>
	<select id="selectStudentName" resultType="kr.co.lms.admin.VO.StudentByCourseVO">
		select student_no, student_name_ko, student_name_eng, student_tel_phone, student_tel_parent from student where student_no=#{param1}
	</select>
	<update id="studentLeaveOutUpdate">
		update student_course_state set student_course_state_date=#{student_course_state_date}, state=#{state} where student_no=#{student_no}
	</update>
</mapper>