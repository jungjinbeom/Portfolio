<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.lms.main.DAO.CourseDAOImp">
	<select id="courseList" parameterType="kr.co.lms.main.VO.PagingVO" resultType="kr.co.lms.main.VO.CourseVO">
		select * from
			(select * from
				(select course_no, course_name, e.employee_name employee_name, course_price, course_img
				from course c join employee e on c.employee_no=e.employee_no
				<if test="search_text != null and search_text != ''">
				where course_name like '%'||#{search_text}||'%'
				</if>
				order by course_no desc)
			where rownum<![CDATA[<=]]>#{pageNum}*#{onePageRecord} order by course_no asc)
		where rownum<![CDATA[<=]]>#{lastPageRecord} order by course_no desc
	</select>
	<select id="getTotalCoureses" resultType="java.lang.Integer">
		select count(course_no) totalRecord from course
		<if test="search_text != null and search_text != ''">
		where course_name like '%'||#{search_text}||'%'
		</if>
	</select>
	<select id="selectCourse" parameterType="kr.co.lms.main.VO.PagingVO" resultType="kr.co.lms.main.VO.CourseVO">
		select course_no, course_name, c.employee_no employee_no, e.employee_name,
			e.employee_img, e.employee_overview, e.admin_id, course_price, 
	        to_char(course_reception_start, 'yyyy/mm/dd') course_reception_start,
	        to_char(course_reception_end, 'yyyy/mm/dd') course_reception_end,
	        to_char(course_start_date, 'yyyy/mm/dd') course_start_date, to_char(course_end_date, 'yyyy/mm/dd') course_end_date,
			course_overview, course_content, course_textbook, course_day, course_time, course_stage, course_img
		from course c join employee e on c.employee_no=e.employee_no
		where course_no=#{course_no}
	</select>
	<select id="selectPaymentNo" resultType="java.lang.String">
		select nvl(payment_no, 0) payment_no from payment where course_no=#{param1} and student_no=#{param2}
	</select>
	<select id="reviewList" parameterType="kr.co.lms.main.VO.PagingVO" resultType="kr.co.lms.main.VO.CourseReviewVO">
		select * from
			(select * from
				(select review_no, cr.student_no, student_id, review_content, review_date, review_rank, course_no
				from course_review cr join student s on cr.student_no=s.student_no
				where course_no=#{course_no}
				order by review_no desc)
			where rownum<![CDATA[<=]]>#{pageNum}*#{onePageRecord} order by review_no asc)
		where rownum<![CDATA[<=]]>#{lastPageRecord} order by review_no desc
	</select>
	<select id="getTotalReviews" resultType="java.lang.Integer">
		select count(review_no) totalRecord from course_review
		where course_no=#{course_no}
	</select>
	<select id="reviewRanks" resultType="kr.co.lms.main.VO.CourseReviewVO">
		select review_rank, count(student_no) review_cnt from course_review
		where course_no = #{course_no}
		group by review_rank order by review_rank desc
	</select>
	<insert id="insertReview" parameterType="kr.co.lms.main.VO.CourseReviewVO">
		insert into course_review(review_no, student_no, payment_no, review_content, review_date, review_rank, course_no)
		values(review_sq.nextVal, #{student_no}, #{payment_no}, #{review_content:CLOB}, sysdate, #{review_rank}, #{course_no})
	</insert>
	<update id="updateReview" parameterType="kr.co.lms.main.VO.CourseReviewVO">
		update course_review set review_content=#{review_content}, review_rank=#{review_rank} where review_no=#{review_no}
	</update>
	<delete id="deleteReview" parameterType="kr.co.lms.main.VO.CourseReviewVO">
		delete from course_review where review_no=#{review_no}
	</delete>
	<select id="selectWishNo" resultType="java.lang.Integer">
		select count(wish_no) from wish_list where course_no=#{param1} and student_no=#{param2}
	</select>
	<insert id="insertWish" parameterType="kr.co.lms.main.VO.WishVO">
		insert into wish_list(wish_no, student_no, course_no, wish_date)
		values(wish_sq.nextVal, #{student_no}, #{course_no}, sysdate)
	</insert>
	<delete id="deleteWish" parameterType="kr.co.lms.main.VO.WishVO">
		delete from wish_list where student_no=#{student_no} and course_no=#{course_no}
	</delete>
</mapper>